"""
    density(Z::Int64)

Extract the mass density for atomic number Z ∈ {1,100}.

# Input Argument(s)
- `Z::Int64`: atomic number of the element.

# Output Argument(s)
- `ρ::Float64`: density [in g/cm³].

# Reference(s)
- Kawrakow et al. (2021), The EGSnrc Code System: Monte Carlo Simulation of Electron and
  Photon Transport.

"""
function density(Z::Int64)
    
    # Define the density values in a dictionary
    densities = Dict(
        1 => 0.0808, 2 => 0.1900, 3 => 0.5340, 4 => 1.8500, 5 => 2.5000,
        6 => 2.2600, 7 => 1.1400, 8 => 1.5680, 9 => 1.5000, 10 => 1.0000,
        11 => 0.9712, 12 => 1.7400, 13 => 2.7020, 14 => 2.4000, 15 => 1.8200,
        16 => 2.0700, 17 => 2.2000, 18 => 1.6500, 19 => 0.8600, 20 => 1.5500,
        21 => 3.0200, 22 => 4.5400, 23 => 5.8700, 24 => 7.1400, 25 => 7.3000,
        26 => 7.8600, 27 => 8.7100, 28 => 8.9000, 29 => 8.9333, 30 => 7.1400,
        31 => 5.9100, 32 => 5.3600, 33 => 5.7300, 34 => 4.8000, 35 => 4.2000,
        36 => 3.4000, 37 => 1.5300, 38 => 2.6000, 39 => 4.4700, 40 => 6.4000,
        41 => 8.5700, 42 => 9.0100, 43 => 11.5000, 44 => 12.2000, 45 => 12.5000,
        46 => 12.0000, 47 => 10.5000, 48 => 8.6500, 49 => 7.3000, 50 => 7.3100,
        51 => 6.6840, 52 => 6.2400, 53 => 4.9300, 54 => 2.7000, 55 => 1.8730,
        56 => 3.5000, 57 => 6.1500, 58 => 6.9000, 59 => 6.7690, 60 => 7.0070,
        61 => 1.0000, 62 => 7.5400, 63 => 5.1700, 64 => 7.8700, 65 => 8.2500,
        66 => 8.5600, 67 => 8.8000, 68 => 9.0600, 69 => 9.3200, 70 => 6.9600,
        71 => 9.8500, 72 => 11.4000, 73 => 16.6000, 74 => 19.3000, 75 => 20.5300,
        76 => 22.4800, 77 => 22.4200, 78 => 21.4500, 79 => 19.3000, 80 => 14.1900,
        81 => 11.8500, 82 => 11.3400, 83 => 9.7800, 84 => 9.3000, 85 => 1.0000,
        86 => 4.0000, 87 => 1.0000, 88 => 5.0000, 89 => 1.0000, 90 => 11.0000,
        91 => 15.3700, 92 => 18.9000, 93 => 20.5000, 94 => 19.7370, 95 => 11.7000,
        96 => 7.0000, 97 => 1.0000, 98 => 1.0000, 99 => 1.0000, 100 => 1.0000
    )
    
    # Check if Z exists in the dictionary
    if haskey(densities, Z)
        return densities[Z]
    else
        error("The input atomic number Z is invalid (Z ∉ {1,100}).")
    end
end